{"version":3,"sources":["webpack:///./src/script.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;;;;;;;;;;;;;;AAcA;AACA;;;;;;;;;;;AAWA;AACA;;;;;;;;;;;;;;;;;AAiBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;;;;;;;;;;;;;;;AAeA;AACA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAS,YAAY,GAAG,GAAG,GAAG,GAC5B;SAAO,IAAI,IAAI,IAChB;;;AAED,IAAM,OAAO,YAAY,IAAI,IAAI,IAAI;;AAErC,QAAQ,IAAI;;AAEZ,IAAM,OAAO,CAAC,IAAI,IAAI,IAAI;AAC1B,IAAM,OAAO,6B,OAAsB;AACnC,QAAQ,IAAI,M","file":"main.11e7f317e947342591b2.js","sourcesContent":["// let and const\n/*\nfunction driverLicence6(passedTest) {\n  let firstName;\n  const yearOfBirth = 1990;\n\n  if (passedTest) {\n    firstName = 'John';\n  }\n\n  console.log(`Name: ${firstName}, Birth: ${yearOfBirth}`);\n}\n\ndriverLicence6(true);\n*/\n// Blocks and IIFEs\n/*\n{\n  const a = 1;\n  let b = 2;\n  var c = 3;\n}\n\nconsole.log(a+b);\nconsole.log(c);\n*/\n\n// Arrow functions\n/*\nconst years = [1990, 1965, 1982, 1937];\n\nlet ages = years.map(el => 2016 - el);\nconsole.log(ages);\n\nages = years.map((el, index) => `Age element ${index + 1}: ${2016 - el}.`);\nconsole.log(ages);\n\nages = years.map((el, index) => {\n  const now = new Date().getFullYear();\n  const age = now - el;\n  return `Age element ${index + 1}: ${age}.`;\n});\nconsole.log(ages);\n*/\n\n// Arrow functions 2\n/*\nconst greenBox = {\n  color: 'green',\n  position: 1,\n  clickMe() {\n    document.querySelector('.green').addEventListener('click', () => {\n      const str = `This is greenBox number: ${this.position} and it is ${this.color}`;\n      alert(str);\n    });\n  },\n};\ngreenBox.clickMe();\n\nconst blueBox = {\n  color: 'blue',\n  position: 2,\n  clickMe() {\n    document.querySelector('.blue').addEventListener('click', () => {\n      const str = `This is blueBox number: ${this.position} and it is ${this.color}`;\n      alert(str);\n    });\n  },\n};\nblueBox.clickMe();\n\nfunction Person(name) {\n  this.name = name;\n}\n\nPerson.prototype.myFriends = function greeting(friends) {\n  const arr = friends.map(el => `${this.name} is friends with ${el}.`);\n  console.log(arr);\n};\n\nconst friends = ['bob', 'jane', 'mark'];\nnew Person('john').myFriends(friends);\n*/\n\n// Destructuring\n/*\nconst [name, year] = ['John', 26];\nconsole.log(name);\nconsole.log(year);\n\nfunction calcAgeRetirement(years) {\n  const age = new Date().getFullYear() - years;\n  return [age, 65 - age];\n}\n\nconst [age2, retirement] = calcAgeRetirement(1991);\nconsole.log(age2);\nconsole.log(retirement);\n*/\n\n// Arrays\n/*\nconst boxes = document.querySelectorAll('.box');\n\nconst boxesArr = Array.from(boxes);\nboxesArr.forEach((cur) => { cur.style.backgroundColor = 'dodgerblue'; });\n\n// for (const idx of boxesArr) {\n//   if (boxesArr.className === 'box blue') {\n//     continue;\n//   }\n//   idx.textContent = 'Husky!';\n// }\n\nboxesArr.map((idx) => { idx.textContent = 'Husky!'; return idx; });\n\nconst ages = [12, 17, 8, 21, 14, 11];\n\nconsole.log(ages.findIndex(item => item >= 18)); // 3 (인덱스)\nconsole.log(ages.find(item => item >= 18)); // 21 (값 자체)\n*/\n\nfunction addFourAges(a, b, c, d) {\n  return a + b + c + d;\n}\n\nconst sum1 = addFourAges(18, 30, 12, 21);\n\nconsole.log(sum1);\n\nconst ages = [18, 30, 12, 21];\nconst max3 = addFourAges(...ages); // ...이 인자 묶음 역할을 하는 듯\nconsole.log(max3);\n\n\n\n// WEBPACK FOOTER //\n// ./src/script.js"],"sourceRoot":""}