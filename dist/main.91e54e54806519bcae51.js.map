{"version":3,"sources":["webpack:///./src/script.js"],"names":[],"mappings":";;;;;AAAA;AACA;;;;;;;;;;;;;;AAcA;AACA;;;;;;;;;;;AAWA;AACA;;;;;;;;;;;;;;;;;AAiBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;;;;;;;;;;;;;;;AAeA;AACA;;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;;;;;;;;AAQA;AACA;;;;;;;;;;;;;;;AAeA;AACA;;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA","file":"main.91e54e54806519bcae51.js","sourcesContent":["// let and const\n/*\nfunction driverLicence6(passedTest) {\n  let firstName;\n  const yearOfBirth = 1990;\n\n  if (passedTest) {\n    firstName = 'John';\n  }\n\n  console.log(`Name: ${firstName}, Birth: ${yearOfBirth}`);\n}\n\ndriverLicence6(true);\n*/\n// Blocks and IIFEs\n/*\n{\n  const a = 1;\n  let b = 2;\n  var c = 3;\n}\n\nconsole.log(a+b);\nconsole.log(c);\n*/\n\n// Arrow functions\n/*\nconst years = [1990, 1965, 1982, 1937];\n\nlet ages = years.map(el => 2016 - el);\nconsole.log(ages);\n\nages = years.map((el, index) => `Age element ${index + 1}: ${2016 - el}.`);\nconsole.log(ages);\n\nages = years.map((el, index) => {\n  const now = new Date().getFullYear();\n  const age = now - el;\n  return `Age element ${index + 1}: ${age}.`;\n});\nconsole.log(ages);\n*/\n\n// Arrow functions 2\n/*\nconst greenBox = {\n  color: 'green',\n  position: 1,\n  clickMe() {\n    document.querySelector('.green').addEventListener('click', () => {\n      const str = `This is greenBox number: ${this.position} and it is ${this.color}`;\n      alert(str);\n    });\n  },\n};\ngreenBox.clickMe();\n\nconst blueBox = {\n  color: 'blue',\n  position: 2,\n  clickMe() {\n    document.querySelector('.blue').addEventListener('click', () => {\n      const str = `This is blueBox number: ${this.position} and it is ${this.color}`;\n      alert(str);\n    });\n  },\n};\nblueBox.clickMe();\n\nfunction Person(name) {\n  this.name = name;\n}\n\nPerson.prototype.myFriends = function greeting(friends) {\n  const arr = friends.map(el => `${this.name} is friends with ${el}.`);\n  console.log(arr);\n};\n\nconst friends = ['bob', 'jane', 'mark'];\nnew Person('john').myFriends(friends);\n*/\n\n// Destructuring\n/*\nconst [name, year] = ['John', 26];\nconsole.log(name);\nconsole.log(year);\n\nfunction calcAgeRetirement(years) {\n  const age = new Date().getFullYear() - years;\n  return [age, 65 - age];\n}\n\nconst [age2, retirement] = calcAgeRetirement(1991);\nconsole.log(age2);\nconsole.log(retirement);\n*/\n\n// Arrays\n/*\nconst boxes = document.querySelectorAll('.box');\n\nconst boxesArr = Array.from(boxes);\nboxesArr.forEach((cur) => { cur.style.backgroundColor = 'dodgerblue'; });\n\n// for (const idx of boxesArr) {\n//   if (boxesArr.className === 'box blue') {\n//     continue;\n//   }\n//   idx.textContent = 'Husky!';\n// }\n\nboxesArr.map((idx) => { idx.textContent = 'Husky!'; return idx; });\n\nconst ages = [12, 17, 8, 21, 14, 11];\n\nconsole.log(ages.findIndex(item => item >= 18)); // 3 (인덱스)\nconsole.log(ages.find(item => item >= 18)); // 21 (값 자체)\n*/\n\n// The Spread Operator\n/*\nfunction addFourAges(a, b, c, d) {\n  return a + b + c + d;\n}\n\nconst sum1 = addFourAges(18, 30, 12, 21);\n\nconsole.log(sum1);\n\nconst ages = [18, 30, 12, 21];\nconst max3 = addFourAges(...ages); // ...이 인자 묶음 역할을 하는 듯\nconsole.log(max3);\n\nconst h = document.querySelector('h1');\nconst boxes = document.querySelectorAll('.box');\nconst all = [h, ...boxes];\n\nArray.from(all).forEach((cur) => {\n  const style = cur;\n  style.style.color = 'purple';\n});\n*/\n\n// Rest parameters\n/*\nfunction isFullAge(...args) {\n  console.log(args);\n}\n\nisFullAge(1990, 1999, 1965);\n*/\n\n// Default parameters\n/*\nfunction SmithPerson(firstName, yearOfBirth, lastName = 'Smith', nationality = 'Korea') {\n  this.firstName = firstName;\n  this.yearOfBirth = yearOfBirth;\n  this.lastName = lastName;\n  this.nationality = nationality;\n}\n\nconst john = new SmithPerson('john', 1990);\nconst emily = new SmithPerson('emily', 1990, 'Grand', 'Japan');\n\nconsole.log(john);\nconsole.log(emily);\n*/\n\n// Maps\n/*\nconst question = new Map();\nquestion.set('question', 'What is th official name of the latest major JavaScript version?');\nquestion.set(1, 'ES5');\nquestion.set(2, 'ES6');\nquestion.set(3, 'ES2015');\nquestion.set(4, 'ES7');\nquestion.set('correct', 3);\n\nquestion.set(true, 'Correct answer!');\nquestion.set(false, 'Wrong, Please try again.');\n\nconsole.log(question.get('question'));\n\nquestion.delete(4);\nquestion.delete(4);\n\nconsole.log(question.entries());\n\nquestion.forEach((key, value) => (console.log(`${key}: ${value}`)));\n*/\n\n// Classes\n/*\nclass Person {\n  constructor(name, yearOfBirth, job) {\n    this.name = name;\n    this.yearOfBirth = yearOfBirth;\n    this.job = job;\n  }\n\n  calculateAge() {\n    return new Date().getFullYear() - this.yearOfBirth;\n  }\n\n  static greeting() {\n    console.log('Hey there!');\n  }\n}\n\nconst john = new Person('John', 1990, 'teacher');\n\nconsole.log(john);\nconsole.log(john.calculateAge());\nPerson.greeting();\n*/\n\n// Classes with Subclass\n/*\nclass Person {\n  constructor(name, yearOfBirth, job) {\n    this.name = name;\n    this.yearOfBirth = yearOfBirth;\n    this.job = job;\n  }\n\n  calculateAge() {\n    return new Date().getFullYear() - this.yearOfBirth;\n  }\n}\n\nclass Athlete extends Person {\n  constructor(name, yearOfBirth, job, olympic, medals) {\n    super(name, yearOfBirth, job);\n    this.olymplic = olympic;\n    this.medals = medals;\n  }\n\n  wonMedal() {\n    this.medals = this.medals + 1;\n    return this.medals;\n  }\n}\n\nconst johnAthlete = new Athlete('John', 1990, 'swimmer', 3, 10);\nconsole.log(johnAthlete.wonMedal());\nconsole.log(johnAthlete.calculateAge());\n*/\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/script.js"],"sourceRoot":""}